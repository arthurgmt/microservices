{"ast":null,"code":"var _jsxFileName = \"/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    const response = await axios.get('http://localhost:8000/api/users');\n    setUsers(response.data);\n  };\n  const deleteUser = async id => {\n    await axios.delete(`http://localhost:8000/api/users/${id}`);\n    fetchUsers();\n  };\n  const updateRole = async (id, newRole) => {\n    await axios.put(`http://localhost:8000/api/users/${id}`, {\n      role: newRole\n    });\n    fetchUsers();\n  };\n  const {\n    isAuthenticated,\n    userRole\n  } = useAuth();\n  if (!isAuthenticated || !userRole === 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"admin-title\",\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"admin-thread\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"admin-tr\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"admin-text\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"admin-text\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"admin-text\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"admin-tr\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"admin-text\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"admin-text\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: user.role,\n              onChange: e => updateRole(user.id, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"admin-text\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteUser(user.id),\n              className: \"admin-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"rNsr7oc4HHFaxIFsI0C59DaxrBw=\", true);\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","Admin","users","setUsers","fetchUsers","response","get","data","deleteUser","id","delete","updateRole","newRole","put","role","isAuthenticated","userRole","useAuth","map","user","email","e","target","value"],"sources":["/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Admin.css'\n\nfunction Admin() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    const response = await axios.get('http://localhost:8000/api/users');\n    setUsers(response.data);\n  };\n\n  const deleteUser = async (id) => {\n    await axios.delete(`http://localhost:8000/api/users/${id}`);\n    fetchUsers();\n  };\n\n  const updateRole = async (id, newRole) => {\n    await axios.put(`http://localhost:8000/api/users/${id}`, { role: newRole });\n    fetchUsers();\n  };\n\n  const { isAuthenticated, userRole } = useAuth();\n  \n  if (!isAuthenticated || (!userRole ==='admin')) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div className='admin-container'>\n      <h1 className='admin-title'>Admin Panel</h1>\n      <table className='admin-table'>\n        <thead className='admin-thread'>\n          <tr className='admin-tr'>\n            <th className='admin-text'>Email</th>\n            <th className='admin-text'>Role</th>\n            <th className='admin-text'>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user.id} className='admin-tr'>\n              <td className='admin-text'>{user.email}</td>\n              <td className='admin-text'>\n                <select value={user.role} onChange={e => updateRole(user.id, e.target.value)}>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"user\">User</option>\n                </select>\n              </td>\n              <td className='admin-text'>\n                <button onClick={() => deleteUser(user.id) } className='admin-button'>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Admin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}