{"ast":null,"code":"var _jsxFileName = \"/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/FileUpload.js\",\n  _s = $RefreshSig$();\n// src/components/FileUpload.js\nimport React, { useCallback, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [isDragActive, setIsDragActive] = useState(false);\n  const handleDragEnter = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragActive(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragActive(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDrop = useCallback(async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragActive(false);\n    const files = e.dataTransfer.files;\n    const formData = new FormData();\n\n    // Ajout des fichiers à FormData\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n\n    // backend upload url\n    const uploadUrl = 'http://127.0.0.1:8000/upload';\n    try {\n      const response = await fetch(uploadUrl, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors du téléversement des fichiers');\n      }\n\n      // Traitement de la réponse du serveur\n      const data = await response.json();\n      console.log('Fichiers téléversés avec succès:', data);\n    } catch (error) {\n      console.error('Erreur lors du téléversement des fichiers:', error);\n    }\n  }, []);\n  const {\n    isAuthenticated,\n    userRole\n  } = useAuth();\n  if (!isAuthenticated || !userRole === 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropzone ${isDragActive ? 'active' : ''}`,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    children: isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"D\\xE9posez vos fichiers ici...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Faites glisser et d\\xE9posez vos fichiers ici, ou cliquez pour s\\xE9lectionner les fichiers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"FUXTLkSoyNPcJhj8c+8kakmiwxc=\", false, function () {\n  return [useAuth];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useState","Navigate","useAuth","FileUpload","isDragActive","setIsDragActive","handleDragEnter","e","preventDefault","stopPropagation","handleDragLeave","handleDragOver","handleDrop","files","dataTransfer","formData","FormData","i","length","append","uploadUrl","response","fetch","method","body","ok","Error","data","json","console","log","error","isAuthenticated","userRole"],"sources":["/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/FileUpload.js"],"sourcesContent":["// src/components/FileUpload.js\nimport React, { useCallback, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport './FileUpload.css';\n\nconst FileUpload = () => {\n  const [isDragActive, setIsDragActive] = useState(false);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragActive(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragActive(false);\n  }, []);\n\n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n\n  const handleDrop = useCallback(\n    async (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsDragActive(false);\n  \n      const files = e.dataTransfer.files;\n      const formData = new FormData();\n  \n      // Ajout des fichiers à FormData\n      for (let i = 0; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n  \n      // backend upload url\n      const uploadUrl = 'http://127.0.0.1:8000/upload';\n  \n      try {\n        const response = await fetch(uploadUrl, {\n          method: 'POST',\n          body: formData,\n        });\n  \n        if (!response.ok) {\n          throw new Error('Erreur lors du téléversement des fichiers');\n        }\n  \n        // Traitement de la réponse du serveur\n        const data = await response.json();\n        console.log('Fichiers téléversés avec succès:', data);\n  \n      } catch (error) {\n        console.error('Erreur lors du téléversement des fichiers:', error);\n      }\n    },\n    []\n  );\n  \n  \n  const { isAuthenticated, userRole } = useAuth();\n\n  if (!isAuthenticated || !userRole ==='admin') {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div\n      className={`dropzone ${isDragActive ? 'active' : ''}`}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      {isDragActive ? (\n        <p>Déposez vos fichiers ici...</p>\n      ) : (\n        <p>Faites glisser et déposez vos fichiers ici, ou cliquez pour sélectionner les fichiers</p>\n      )}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}