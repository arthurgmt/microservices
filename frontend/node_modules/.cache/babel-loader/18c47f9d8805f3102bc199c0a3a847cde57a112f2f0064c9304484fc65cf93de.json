{"ast":null,"code":"var _jsxFileName = \"/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/Login.js\",\n  _s = $RefreshSig$();\n// src/component/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [notification, setNotification] = useState(null);\n  const {\n    login\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Effectuez la demande d'authentification à votre backend et récupérez le token JWT\n      const response = await fetch('http://127.0.0.1:8000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        login(data.token);\n        setNotification(\"Connected\");\n      } else if (response.status === 401) {\n        setNotification(\"Invalid Credentials\");\n      } else if (response.status === 500) {\n        setNotification(\"Erreur serveur\");\n      } else {\n        setNotification(\"Une erreur inattendue s'est produite\");\n      }\n      setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n    } catch (error) {\n      console.error(error);\n      setNotification(\"Erreur réseau\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      style: {\n        position: \"fixed\",\n        bottom: \"1.5%\",\n        right: \"0.5%\",\n        transform: \"translateX(-50%)\",\n        zIndex: 1000\n      },\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dR1/AWTG8x8RzaDe8EpIQtqd6CQ=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","Login","email","setEmail","password","setPassword","notification","setNotification","login","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","data","json","token","setTimeout","error","console","target","value","position","bottom","right","transform","zIndex"],"sources":["/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/Login.js"],"sourcesContent":["// src/component/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from './AuthContext';\n\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [notification, setNotification] = useState(null);\n  const { login } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Effectuez la demande d'authentification à votre backend et récupérez le token JWT\n      const response = await fetch('http://127.0.0.1:8000/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.status === 200) {\n        const data = await response.json();\n        login(data.token);\n        setNotification(\"Connected\");\n      } else if (response.status === 401) {\n        setNotification(\"Invalid Credentials\");\n      } else if (response.status === 500) {\n        setNotification(\"Erreur serveur\");\n      } else {\n        setNotification(\"Une erreur inattendue s'est produite\");\n      }\n\n      setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n\n    } catch (error) {\n      console.error(error);\n      setNotification(\"Erreur réseau\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Mot de passe\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Connexion</button>\n      </form>\n      {notification && (\n      <div\n        className=\"notification\"\n        style={{\n          position: \"fixed\",\n          bottom: \"1.5%\",\n          right: \"0.5%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n        }}\n      >\n        {notification}\n      </div>\n    )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,eAAe;AAAC;AAGxC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM;IAAES;EAAM,CAAC,GAAGR,OAAO,EAAE;EAE3B,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QAClCb,KAAK,CAACY,IAAI,CAACE,KAAK,CAAC;QACjBf,eAAe,CAAC,WAAW,CAAC;MAC9B,CAAC,MAAM,IAAIK,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAClCZ,eAAe,CAAC,qBAAqB,CAAC;MACxC,CAAC,MAAM,IAAIK,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAClCZ,eAAe,CAAC,gBAAgB,CAAC;MACnC,CAAC,MAAM;QACLA,eAAe,CAAC,sCAAsC,CAAC;MACzD;MAEAgB,UAAU,CAAC,MAAM;QACfhB,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBjB,eAAe,CAAC,eAAe,CAAC;IAClC;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEE,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,KAAK,EAAEP,KAAM;QACb,QAAQ,EAAGQ,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACgB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eACF;QACE,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,cAAc;QAC1B,KAAK,EAAEvB,QAAS;QAChB,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACgB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC,EACNrB,YAAY,iBACb;MACE,SAAS,EAAC,cAAc;MACxB,KAAK,EAAE;QACLsB,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,kBAAkB;QAC7BC,MAAM,EAAE;MACV,CAAE;MAAA,UAED1B;IAAY;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEV,CAAC;AAAC,GAxEIL,KAAK;EAAA,QAISD,OAAO;AAAA;AAAA,KAJrBC,KAAK;AA0EX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}