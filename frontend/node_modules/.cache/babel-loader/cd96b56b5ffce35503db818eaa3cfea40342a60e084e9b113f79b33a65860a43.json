{"ast":null,"code":"var _jsxFileName = \"/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/SnakeGame.js\",\n  _s = $RefreshSig$();\n// SnakeGame.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }]);\n  const [food, setFood] = useState({\n    x: 5,\n    y: 5\n  });\n  const [direction, setDirection] = useState({\n    x: 1,\n    y: 0\n  });\n  // const [size, setSize] = useState(20);\n  // const [speed, setSpeed] = useState(200);\n  const [paused, setPaused] = useState(false);\n  const size = 20;\n  const speed = 200;\n  const gameArea = useRef(null);\n  const togglePause = () => {\n    setPaused(prevPaused => !prevPaused);\n  };\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * size);\n    const y = Math.floor(Math.random() * size);\n    return {\n      x,\n      y\n    };\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'ArrowUp' && direction.y === 0) {\n      setDirection({\n        x: 0,\n        y: -1\n      });\n    } else if (event.key === 'ArrowDown' && direction.y === 0) {\n      setDirection({\n        x: 0,\n        y: 1\n      });\n    } else if (event.key === 'ArrowLeft' && direction.x === 0) {\n      setDirection({\n        x: -1,\n        y: 0\n      });\n    } else if (event.key === 'ArrowRight' && direction.x === 0) {\n      setDirection({\n        x: 1,\n        y: 0\n      });\n    }\n  };\n  const moveSnake = useCallback(() => {\n    const newHead = {\n      x: (snake[0].x + direction.x + size) % size,\n      y: (snake[0].y + direction.y + size) % size\n    };\n    if (snake.some(part => part.x === newHead.x && part.y === newHead.y)) {\n      setSnake([{\n        x: 10,\n        y: 10\n      }]);\n      setFood(getRandomPosition());\n      setDirection({\n        x: 1,\n        y: 0\n      });\n      return;\n    }\n    setSnake(prevState => [newHead, ...prevState.slice(0, -1)]);\n    if (newHead.x === food.x && newHead.y === food.y) {\n      setSnake(prevState => [...prevState, prevState[prevState.length - 1]]);\n      setFood(getRandomPosition());\n    }\n  }, [snake, direction, size, food]);\n  useEffect(() => {\n    if (paused) {\n      return;\n    }\n    gameArea.current.focus();\n    const intervalId = setInterval(moveSnake, speed);\n    return () => clearInterval(intervalId);\n  }, [snake, direction, moveSnake, speed, paused]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: gameArea,\n      className: \"game-area\",\n      tabIndex: \"0\",\n      onKeyDown: handleKeyPress,\n      style: {\n        gridTemplateColumns: `repeat(${size}, 1fr)`,\n        gridTemplateRows: `repeat(${size}, 1fr)`\n      },\n      children: [snake.map((part, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-part\",\n        style: {\n          gridColumnStart: part.x + 1,\n          gridRowStart: part.y + 1\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food\",\n        style: {\n          gridColumnStart: food.x + 1,\n          gridRowStart: food.y + 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePause,\n      children: paused ? 'Reprendre' : 'Pause'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"/GA2AaIvH7TfBX6i8XHgvNcnEKc=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","SnakeGame","snake","setSnake","x","y","food","setFood","direction","setDirection","paused","setPaused","size","speed","gameArea","togglePause","prevPaused","getRandomPosition","Math","floor","random","handleKeyPress","event","key","moveSnake","newHead","some","part","prevState","slice","length","current","focus","intervalId","setInterval","clearInterval","gridTemplateColumns","gridTemplateRows","map","index","gridColumnStart","gridRowStart"],"sources":["/Users/arthur/Documents/GitHub/docker-app/frontend/src/component/SnakeGame.js"],"sourcesContent":["// SnakeGame.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './SnakeGame.css';\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n  const [food, setFood] = useState({ x: 5, y: 5 });\n  const [direction, setDirection] = useState({ x: 1, y: 0 });\n  // const [size, setSize] = useState(20);\n  // const [speed, setSpeed] = useState(200);\n  const [paused, setPaused] = useState(false);\n\n  const size = 20;\n  const speed = 200;\n\n  const gameArea = useRef(null);\n\n  const togglePause = () => {\n    setPaused((prevPaused) => !prevPaused);\n  };  \n\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * size);\n    const y = Math.floor(Math.random() * size);\n    return { x, y };\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'ArrowUp' && direction.y === 0) {\n      setDirection({ x: 0, y: -1 });\n    } else if (event.key === 'ArrowDown' && direction.y === 0) {\n      setDirection({ x: 0, y: 1 });\n    } else if (event.key === 'ArrowLeft' && direction.x === 0) {\n      setDirection({ x: -1, y: 0 });\n    } else if (event.key === 'ArrowRight' && direction.x === 0) {\n      setDirection({ x: 1, y: 0 });\n    }\n  };\n\n  const moveSnake = useCallback(() => {\n    const newHead = {\n      x: (snake[0].x + direction.x + size) % size,\n      y: (snake[0].y + direction.y + size) % size,\n    };\n  \n    if (snake.some((part) => part.x === newHead.x && part.y === newHead.y)) {\n      setSnake([{ x: 10, y: 10 }]);\n      setFood(getRandomPosition());\n      setDirection({ x: 1, y: 0 });\n      return;\n    }\n  \n    setSnake((prevState) => [newHead, ...prevState.slice(0, -1)]);\n  \n    if (newHead.x === food.x && newHead.y === food.y) {\n      setSnake((prevState) => [...prevState, prevState[prevState.length - 1]]);\n      setFood(getRandomPosition());\n    }\n  }, [snake, direction, size, food]);\n\n  useEffect(() => {\n    if (paused) {\n      return;\n    }\n  \n    gameArea.current.focus();\n    const intervalId = setInterval(moveSnake, speed);\n    return () => clearInterval(intervalId);\n  }, [snake, direction, moveSnake, speed, paused]);\n  \n  return (\n    <div>\n      <div\n        ref={gameArea}\n        className=\"game-area\"\n        tabIndex=\"0\"\n        onKeyDown={handleKeyPress}\n        style={{\n          gridTemplateColumns: `repeat(${size}, 1fr)`,\n          gridTemplateRows: `repeat(${size}, 1fr)`,\n        }}\n      >\n        {snake.map((part, index) => (\n          <div\n            key={index}\n            className=\"snake-part\"\n            style={{ gridColumnStart: part.x + 1, gridRowStart: part.y + 1 }}\n          />\n        ))}\n        <div\n          className=\"food\"\n          style={{ gridColumnStart: food.x + 1, gridRowStart: food.y + 1 }}\n        />\n      </div>\n      <button onClick={togglePause}>{paused ? 'Reprendre' : 'Pause'}</button>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}